<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- Scans the classpath of this application for @Components to deploy as beans -->
    <context:component-scan base-package="com.slliver.**.web"/>

    <aop:aspectj-autoproxy expose-proxy="true"/>

    <!-- Configures the @Controller programming model -->
    <mvc:annotation-driven validator="validator"/>

    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <property name="providerClass" value="org.hibernate.validator.HibernateValidator"/>
        <!-- 错误提示消息，暂时不适用，如果不加默认到 使用classpath下的 ValidationMessages.properties -->
        <!--<property name="validationMessageSource" ref="messageSource"/>  -->
    </bean>

    <!-- <mvc:default-servlet-handler/> -->
    <!-- 上面的方式虽然也能达到类似效果，但没有下面这种功能更强大更灵活。可以添加自定义过滤处理 -->
    <mvc:resources mapping="/static/**" location="/static/,classpath:/META-INF/resources/static/"/>
    <mvc:resources mapping="/assets/**" location="/assets/,classpath:/META-INF/resources/assets/"/>

    <!-- 总错误处理-->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="defaultErrorView">
            <value>/error</value>
        </property>
        <property name="defaultStatusCode">
            <value>500</value>
        </property>
        <property name="warnLogCategory">
            <value>org.springframework.web.servlet.handler.SimpleMappingExceptionResolver</value>
        </property>
        <property name="exceptionMappings">
            <props>
                <prop key="com.slliver.common.exception.RQException">error</prop>
                <prop key="com.slliver.common.exception.RQWebException">error</prop>
                <prop key="com.slliver.common.exception.RQServiceException">error</prop>
                <prop key="com.slliver.common.exception.RQCacheException">error</prop>
                <prop key="com.slliver.common.exception.RQSessionTimeoutException">timeout</prop>
                <prop key="com.slliver.common.exception.RQJsonSessionTimeoutException">jsonTimeout</prop>
            </props>
        </property>
        <property name="statusCodes"><!-- 定义在发生异常时视图跟返回码的对应关系 -->
            <props>
                <prop key="error">500</prop>
                <prop key="timeout">511</prop>
                <prop key="jsonTimeout">511</prop>
            </props>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="contentType" value="text/html;charset=UTF-8"/>
        <property name="order" value="0"/>
    </bean>

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 框架限制1024M,js上传限制600M -->
        <property name="maxUploadSize" value="1073741824"/>
        <property name="defaultEncoding" value="UTF-8"></property>
    </bean>

    <!-- 拦截器配置 -->
    <mvc:interceptors>
        <!-- 配置Token拦截器，防止用户重复提交数据 -->
        <mvc:interceptor>
            <!--<mvc:mapping path="/sys/**"/>-->
            <mvc:mapping path="/**"/>
            <bean class="com.slliver.common.interceptor.token.TokenInterceptor"/>
        </mvc:interceptor>
        <!-- 用于统一处理pkid、menuId这些全局参数 -->
        <mvc:interceptor>
            <!--<mvc:mapping path="/sys/**"/>-->
            <mvc:mapping path="/**"/>
            <bean class="com.slliver.common.interceptor.navigator.NavigatorInterceptor"/>
        </mvc:interceptor>
        <!-- 用于过滤web部分请求，非接口方式访问 -->
        <mvc:interceptor>
            <mvc:mapping path="/*/**"/>
            <!-- 排除以下请求 -->
            <mvc:exclude-mapping path="/api/**"/>
            <!--<mvc:exclude-mapping path="/resource/**"/>-->
            <bean class="com.slliver.common.interceptor.session.SessionTimeoutInterceptor">
                <property name="allowUrls">
                    <list>
                        <value>/loginIndex</value>
                        <value>/login</value>
                        <value>/logout</value>
                        <value>/verifyCode/</value>
                        <value>/static/</value>
                        <value>/assets/</value>
                        <!--<value>/resource/</value>-->
                        <value>/favicon.ico</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
        <!-- 用于过滤用户访问请求中token -->
        <mvc:interceptor>
            <mvc:mapping path="/api/**"/>
            <bean class="com.slliver.common.interceptor.token.ApiTokenInterceptor">
                <property name="allowApiUrls">
                    <list>
                        <value>/api/test</value>
                    </list>
                </property>
            </bean>
        </mvc:interceptor>
    </mvc:interceptors>
</beans>